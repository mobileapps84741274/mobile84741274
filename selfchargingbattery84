#include <avr/sleep.h>
#include <avr/wdt.h>

#define LED 4

#include <SoftwareSerial.h>

SoftwareSerial mySerial(0, 1);

ISR(WDT_vect)
  {
  wdt_disable(); 
  }

void myWatchdogEnable(const byte interval)
  {

  noInterrupts();

  wdt_reset();
   
  MCUSR = 0;                          // reset various flags
  WDTCR |= 0b00011000;               // see docs, set WDCE, WDE
  WDTCR =  0b01000000 | interval;    // set WDIE, and appropriate delay
 
  ADCSRA &= ~_BV(ADEN);

  set_sleep_mode (SLEEP_MODE_PWR_DOWN);
  sleep_bod_disable();
  interrupts();
  sleep_mode();     
 
  }

void setup()
{
pinMode (LED, OUTPUT);
pinMode (3, OUTPUT);

mySerial.print("AT+CWMODE=1\r\n");
delay(884);
mySerial.print("AT+CWJAP=\"mg\",\"mmmmmmm4\"\r\n");
delay(884);

Serial.print("AT+CWMODE=1\r\n");
delay(884);
Serial.print("AT+CWJAP=\"mg\",\"mmmmmmm4\"\r\n");
delay(884);

} 

void loop(){

if (mySerial.available())
Serial.write(mySerial.read());
if (Serial.available())
mySerial.write(Serial.read());

  digitalWrite (LED, HIGH);
  digitalWrite (3, HIGH);
  delay (884);   
  digitalWrite (LED, LOW); 

  for (int i = 0; i < 4; i++){
  myWatchdogEnable (0b000110);  // 1 second
  }

} 

// sleep bit patterns:
//  1 second:  0b000110
//  2 seconds: 0b000111
//  4 seconds: 0b100000
//  8 seconds: 0b100001
