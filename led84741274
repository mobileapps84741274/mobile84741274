/*
    This sketch establishes a TCP connection to a "quote of the day" service.
    It sends a "hello" message, and then prints received data.
*/

#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

#ifndef STASSID
#define STASSID "AndroidAP"
#define STAPSK  "linux8474"
#endif

const char* ssid     = "WR7010-2.4G-9AE84";
const char* password = "axxx76874";

const char* ssid84     = "AndroidAP";
const char* password84 = "linux8474";

const char* ssid8474     = "WR7010-2.4G-9AE";
const char* password8474 = "axxx76874";

const char* ssid844     = "LIAM RULES";
const char* password844 = "axxx76874";

unsigned long buttonPressedAt = 0;
const int BUTTON = 16;
bool buttonReleased = false;
byte buttonPrevState = 0;

void setup() {
  Serial.begin(115200);

  // We start by connecting to a WiFi network

  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  /* Explicitly set the ESP8266 to be a WiFi-client, otherwise, it by default,
     would try to act as both a client and an access-point and could cause
     network-issues with your other WiFi-devices on your WiFi-network. */
  WiFi.mode(WIFI_STA);

WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

pinMode(16, INPUT);

pinMode(A0, INPUT);

}

void loop() {

   // wait for WiFi connection
   if (WiFi.status() == WL_CONNECTED) {
       HTTPClient http;
       http.begin("http://154.127.52.52:8884/api8474.php"); //HTTP URL for hosted server(local server)
       http.GET();
       delay(884);
       //192.168.43.161 - HOST     PORT: 3000 and /api is the target api we need to hit to get response
       String payload = http.getString();// gives us the message received by the GET Request

           if(payload == "1")
           {
           pinMode(14, OUTPUT);
           digitalWrite(14,HIGH);
           pinMode(4, OUTPUT);
           digitalWrite(4,LOW);
           pinMode(5, OUTPUT);
           digitalWrite(5,LOW);
           pinMode(12, OUTPUT);
           digitalWrite(12,LOW);
           pinMode(13, OUTPUT);
           digitalWrite(13,LOW);
           }
           if(payload == "2")
           {          
           pinMode(5, OUTPUT);
           digitalWrite(5,HIGH);
           pinMode(14, OUTPUT);
           digitalWrite(14,HIGH);
           pinMode(4, OUTPUT);
           digitalWrite(4,LOW);
           pinMode(12, OUTPUT);
           digitalWrite(12,LOW);
           pinMode(13, OUTPUT);
           digitalWrite(13,LOW);
           }
           if(payload == "3")
           {          
           pinMode(5, OUTPUT);
           digitalWrite(5,HIGH);
           pinMode(4, OUTPUT);
           digitalWrite(4,HIGH);
           pinMode(14, OUTPUT);
           digitalWrite(14,HIGH);
           pinMode(12, OUTPUT);
           digitalWrite(12,LOW);
           pinMode(13, OUTPUT);
           digitalWrite(13,LOW);
           }
           if(payload == "4")
           {          
           pinMode(5, OUTPUT);
           digitalWrite(5,HIGH);
           pinMode(4, OUTPUT);
           digitalWrite(4,HIGH);
           pinMode(14, OUTPUT);
           digitalWrite(14,HIGH);
           pinMode(12, OUTPUT);
           digitalWrite(12,HIGH);
           pinMode(13, OUTPUT);
           digitalWrite(13,LOW);
           }
           if(payload == "5")
           {          
           pinMode(5, OUTPUT);
           digitalWrite(5,HIGH);
           pinMode(4, OUTPUT);
           digitalWrite(4,HIGH);
           pinMode(14, OUTPUT);
           digitalWrite(14,HIGH);
           pinMode(12, OUTPUT);
           digitalWrite(12,HIGH);
           pinMode(13, OUTPUT);
           digitalWrite(13,HIGH);
           }

}

int linux8474 = analogRead(16);

if(linux8474 > 884)

{

if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status
 
HTTPClient http;  //Declare an object of class HTTPClient
 
http.begin("http://154.127.52.52:8884/linuxwork84.php");  //Specify request destination

http.GET();
delay(884);

String payload = http.getString();   //Get the request response payload
Serial.println(payload);

}

}

int linux84 = analogRead(A0);

if(linux84 > 884)

{

if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status
 
HTTPClient http;  //Declare an object of class HTTPClient
 
http.begin("http://154.127.52.52:8884/linuxwork8474.php");  //Specify request destination

http.GET();
delay(884);
                                                                 //Send the request
String payload = http.getString();   //Get the request response payload
Serial.println(payload);

}

}

}
